AWSTemplateFormatVersion: '2010-09-09'
Description: Template di base per un'infrastruttura con subnet pubbliche su AWS

Parameters:
  EnvironmentName:
    Type: String
    Default: dev
    Description: Nome dell'ambiente (es. dev, prod)

  InstanceType:
    Type: String
    Default: t3.micro
    Description: Tipo di istanza EC2
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: KeyName

Resources:
  # VPC
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-VPC"

  # Subnet pubbliche
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-PublicSubnet1"

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-PublicSubnet2"

  # Internet Gateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-InternetGateway"

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Route Table per subnet pubbliche
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-PublicRouteTable"

  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Associazioni tra le subnet pubbliche e la route table
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Security Group per le istanze EC2
  WebSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Accesso pubblico SSH e HTTP/HTTPS
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  # EC2 Instance
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      SubnetId: !Ref PublicSubnet1
      ImageId: ami-066784287e358dad1
 # Sostituisci con l'AMI corretta per la tua regione
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-WebServer"

Outputs:
  InstancePublicIP:
    Description: IP pubblico dell'istanza EC2
    Value: !GetAtt EC2Instance.PublicIp
  InstancePublicDNS:
    Description: DNS pubblico dell'istanza EC2
    Value: !GetAtt EC2Instance.PublicDnsName
  VPCId:
    Description: ID della VPC
    Value: !Ref VPC
  Subnet1Id:
    Description: ID della Subnet Pubblica 1
    Value: !Ref PublicSubnet1
  Subnet2Id:
    Description: ID della Subnet Pubblica 2
    Value: !Ref PublicSubnet2
